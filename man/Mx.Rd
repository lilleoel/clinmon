% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Mx.R
\name{Mx}
\alias{Mx}
\title{Mean flow index (Mx)}
\usage{
Mx(df, del = NULL, trigger = NULL,
blocksize = 3, epochsize = 20, freq = 1000,
blockmin = 0.5, epochmin = 0.5,
overlapping = FALSE, output = 'period',
fast = FALSE)
}
\arguments{
\item{df}{Raw recording with data in 3 columns: time (in seconds), pressure curve measurement (e.g. CPP, raw measurement), and velocity curve measurement (e.g. MCAv, raw measurement). \code{"dataframe"}}

\item{del}{Deleter with two columns, reference to pressure curve measurement: (1) start of deletion period and (2) end of deletion period. Every row is a deletion period. \code{"dataframe"}}

\item{trigger}{Trigger with two columns: (1) start of analysed period and (2) end of analysed period. Every row is a period for analysis. \code{"dataframe"}}

\item{blocksize}{Size of blocks, in seconds. \code{"numeric"}}

\item{epochsize}{Size of epochs, in number of blocks. \code{"numeric"}}

\item{freq}{Frequency of recorded data, in Hz. \code{"numeric"}}

\item{blockmin}{Minimum measurements required to create a block. \code{"numeric"}}

\item{epochmin}{Minimum blocks required to create an epoch. \code{"numeric"}}

\item{overlapping}{The number of block which should overlap, and remain blank if overlapping should not be utilized. \code{"numeric"}}

\item{output}{Select the output which has to be either one row per. (\code{"period"} or \code{"epoch"})}

\item{fast}{Select if you want the data to aggregated resulting in a faster, but perhabs more imprecise run. \code{"numeric"}}
}
\value{
Returns a dataframe with the results, with either
every period  or epoch as a rows, depending on the chosen output
}
\description{
`Mx()` returns a dataframe with results, missingness for every trigger-period or epoch depending on the chosen output.
}
\details{
Using raw recording, this functions calculates
mean flow veolicty index (Mx), initially described
by Czosnyka et al. in 1996. \code{\link{Mx}}
}
\examples{
data <- data.frame(seq(1, 901, 0.01),
         rnorm(90001), rnorm(90001))
Mx(df=data, freq=100)

}
